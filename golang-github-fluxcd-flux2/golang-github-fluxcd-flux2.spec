# Generated by go2rpm 1.5.0
%bcond_without check

# https://github.com/fluxcd/flux2
%global goipath         github.com/fluxcd/flux2
# renovate: datasource=github-releases depName=fluxcd/flux2
Version: 0.20.0

%gometa

%global common_description %{expand:
Open and extensible continuous delivery solution for Kubernetes. Powered by
GitOps Toolkit.}

%global golicenses      LICENSE
%global godocs          docs CODE_OF_CONDUCT.md CONTRIBUTING.md README.md\\\
                        action/README.md install/README.md

Name:           %{goname}
Release:        1%{?dist}
Summary:        Open and extensible continuous delivery solution for Kubernetes. Powered by GitOps Toolkit

# Upstream license specification: Apache-2.0
License:        ASL 2.0
URL:            %{gourl}
Source0:        %{gosource}

BuildRequires: git
BuildRequires: golang-sigs-k8s-kustomize

Provides:  bundled(golang(github.com/cyphar/filepath-securejoin))
Provides:  bundled(golang(github.com/fluxcd/go-git-providers/github))
Provides:  bundled(golang(github.com/fluxcd/go-git-providers/gitlab))
Provides:  bundled(golang(github.com/fluxcd/go-git-providers/gitprovider))
Provides:  bundled(golang(github.com/fluxcd/helm-controller/api/v2beta1))
Provides:  bundled(golang(github.com/fluxcd/image-automation-controller/api/v1beta1))
Provides:  bundled(golang(github.com/fluxcd/image-reflector-controller/api/v1beta1))
Provides:  bundled(golang(github.com/fluxcd/kustomize-controller/api/v1beta2))
Provides:  bundled(golang(github.com/fluxcd/notification-controller/api/v1beta1))
Provides:  bundled(golang(github.com/fluxcd/pkg/apis/meta))
Provides:  bundled(golang(github.com/fluxcd/pkg/runtime/dependency))
Provides:  bundled(golang(github.com/fluxcd/pkg/runtime/transform))
Provides:  bundled(golang(github.com/fluxcd/pkg/ssa))
Provides:  bundled(golang(github.com/fluxcd/pkg/ssh))
Provides:  bundled(golang(github.com/fluxcd/pkg/untar))
Provides:  bundled(golang(github.com/fluxcd/pkg/version))
Provides:  bundled(golang(github.com/fluxcd/source-controller/api/v1beta1))
Provides:  bundled(golang(github.com/go-git/go-git/v5))
Provides:  bundled(golang(github.com/go-git/go-git/v5/config))
Provides:  bundled(golang(github.com/go-git/go-git/v5/plumbing))
Provides:  bundled(golang(github.com/go-git/go-git/v5/plumbing/object))
Provides:  bundled(golang(github.com/go-git/go-git/v5/plumbing/transport))
Provides:  bundled(golang(github.com/go-git/go-git/v5/plumbing/transport/http))
Provides:  bundled(golang(github.com/go-git/go-git/v5/plumbing/transport/ssh))
Provides:  bundled(golang(github.com/google/go-containerregistry/pkg/name))
Provides:  bundled(golang(github.com/manifoldco/promptui))
Provides:  bundled(golang(github.com/Masterminds/semver/v3))
Provides:  bundled(golang(github.com/olekukonko/tablewriter))
Provides:  bundled(golang(github.com/ProtonMail/go-crypto/openpgp))
Provides:  bundled(golang(github.com/spf13/cobra))
Provides:  bundled(golang(github.com/spf13/cobra/doc))
Provides:  bundled(golang(github.com/spf13/pflag))
Provides:  bundled(golang(golang.org/x/crypto/ssh))
Provides:  bundled(golang(k8s.io/api/apps/v1))
Provides:  bundled(golang(k8s.io/api/core/v1))
Provides:  bundled(golang(k8s.io/api/networking/v1))
Provides:  bundled(golang(k8s.io/api/rbac/v1))
Provides:  bundled(golang(k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/api/equality))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/api/errors))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/api/meta))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/apis/meta/v1))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/apis/meta/v1/unstructured))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/runtime))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/runtime/schema))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/types))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/util/validation))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/util/wait))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/util/yaml))
Provides:  bundled(golang(k8s.io/apimachinery/pkg/watch))
Provides:  bundled(golang(k8s.io/client-go/discovery))
Provides:  bundled(golang(k8s.io/client-go/discovery/cached))
Provides:  bundled(golang(k8s.io/client-go/dynamic))
Provides:  bundled(golang(k8s.io/client-go/kubernetes))
Provides:  bundled(golang(k8s.io/client-go/plugin/pkg/client/auth))
Provides:  bundled(golang(k8s.io/client-go/rest))
Provides:  bundled(golang(k8s.io/client-go/restmapper))
Provides:  bundled(golang(k8s.io/client-go/tools/clientcmd))
Provides:  bundled(golang(k8s.io/client-go/tools/watch))
Provides:  bundled(golang(k8s.io/client-go/util/retry))
Provides:  bundled(golang(k8s.io/kubectl/pkg/util))
Provides:  bundled(golang(k8s.io/kubectl/pkg/util/podutils))
Provides:  bundled(golang(sigs.k8s.io/cli-utils/pkg/kstatus/polling))
Provides:  bundled(golang(sigs.k8s.io/cli-utils/pkg/kstatus/polling/aggregator))
Provides:  bundled(golang(sigs.k8s.io/cli-utils/pkg/kstatus/polling/collector))
Provides:  bundled(golang(sigs.k8s.io/cli-utils/pkg/kstatus/polling/event))
Provides:  bundled(golang(sigs.k8s.io/cli-utils/pkg/kstatus/status))
Provides:  bundled(golang(sigs.k8s.io/cli-utils/pkg/object))
Provides:  bundled(golang(sigs.k8s.io/controller-runtime/pkg/client))
Provides:  bundled(golang(sigs.k8s.io/controller-runtime/pkg/client/apiutil))
Provides:  bundled(golang(sigs.k8s.io/controller-runtime/pkg/controller/controllerutil))
Provides:  bundled(golang(sigs.k8s.io/kustomize/api/filesys))
Provides:  bundled(golang(sigs.k8s.io/kustomize/api/konfig))
Provides:  bundled(golang(sigs.k8s.io/kustomize/api/krusty))
Provides:  bundled(golang(sigs.k8s.io/kustomize/api/provider))
Provides:  bundled(golang(sigs.k8s.io/kustomize/api/types))
Provides:  bundled(golang(sigs.k8s.io/yaml))

%description
%{common_description}

%gopkg

%prep
%goprep -k

%build

# God bless

IN_PATH=${1:-"%{_builddir}/%{repo}-%{version}/manifests"}
OUT_PATH=${2:-"%{_builddir}/%{repo}-%{version}/cmd/flux/manifests"}

info() {
    echo '[INFO] ' "$@"
}

fatal() {
    echo '[ERROR] ' "$@" >&2
    exit 1
}

build() {
  info "building $(basename $2)"
  kustomize build "$1" > "$2"
}

if ! [ -x "$(command -v kustomize)" ]; then
  fatal 'kustomize is not installed'
fi

rm -rf $OUT_PATH
mkdir -p $OUT_PATH
files=""

info using "$(kustomize version --short)"

# build controllers
for controller in ${IN_PATH}/bases/*/; do
    output_path="${OUT_PATH}/$(basename $controller).yaml"
    build $controller $output_path
    files+=" $(basename $output_path)"
done

# build rbac
rbac_path="${IN_PATH}/rbac"
rbac_output_path="${OUT_PATH}/rbac.yaml"
build $rbac_path $rbac_output_path
files+=" $(basename $rbac_output_path)"

# build policies
policies_path="${IN_PATH}/policies"
policies_output_path="${OUT_PATH}/policies.yaml"
build $policies_path $policies_output_path
files+=" $(basename $policies_output_path)"

go mod vendor -v
go mod verify
for cmd in cmd/* ; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done

%install
%gopkginstall
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/

%files
%license LICENSE
%doc docs CODE_OF_CONDUCT.md CONTRIBUTING.md README.md action/README.md
%doc install/README.md
%{_bindir}/*

%gopkgfiles

%changelog
%autochangelog
